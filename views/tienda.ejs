<header>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <form class="d-flex  w-100 p-3">
        <input id="search-input" class="form-control me-2 flex-grow-1" type="search"
          placeholder="Buscar Productos,  Marcas y Mas..." aria-label="Search">
      </form>
    </div>
  </nav>
  
  <div class="w-100">
    <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
      <div class="carousel-inner">
        <div class="carousel-item active">
          <img style="height: 360px !important; width:100% !important; object-fit: cover !important;"
            src="https://images.pexels.com/photos/414974/pexels-photo-414974.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"
            class="d-block w-100" alt="...">
        </div>
        <div class="carousel-item">
          <img style="height: 360px !important; width:100% !important; object-fit: cover !important;"
            src="https://images.pexels.com/photos/2781814/pexels-photo-2781814.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"
            class="d-block w-100" alt="...">
        </div>
        <div class="carousel-item">
          <img style="height: 360px !important; width:100% !important; object-fit: cover !important;"
            src="https://images.pexels.com/photos/2850487/pexels-photo-2850487.jpeg" class="d-block w-100" alt="...">
        </div>
      </div>
      <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls"
        data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>
      <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls"
        data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
    </div>
  </div>

</header>

<div style="height: 150px !important; " class="p-3"  >
   <div class="card h-100">
      <div class="card-body row d-flex align-items-center justify-content-between">        
        <div class="col col-md-4">
          <div class="card CardCategoria" data-Id="<%-mostrarUltimaCategorias[0].IdCategoria  %>"  style="cursor: pointer !important;">
            <div class="card-header bg-info">
              <div class="card-title text-white text-center fs-5">
                <%- mostrarUltimaCategorias[0].Nombre  %>
              </div>
            </div>
          </div>
        </div>
        <div class="col col-md-4">
          <div class="card CardCategoria" data-Id="<%-mostrarUltimaCategorias[1].IdCategoria  %>" style="cursor: pointer !important;">
            <div class="card-header bg-info">
              <div class="card-title text-white text-center fs-5">
                <%- mostrarUltimaCategorias[1].Nombre  %>
              </div>
            </div>
          </div>
        </div>
        <div class="col col-md-4">
          <div class="card CardCategoria" data-Id="<%-mostrarUltimaCategorias[2].IdCategoria  %>" style="cursor: pointer !important;">
            <div class="card-header bg-info">
              <div class="card-title text-white text-center fs-5">
                <%- mostrarUltimaCategorias[2].Nombre  %>
              </div>
            </div>
          </div>
        </div>
      </div>
   </div>
</div>


<div class="container-fluid p-4">
  <div class="row">
    <div class="col col-md-3">
      <div class="card" >
        <div class="card-header bg-success">
          <div class="card-title text-white">
            Categoria
          </div>
        </div>
        <div class="card-body">
          <ul class="list-group text-white">
            <% mostrarCategoria.forEach(element=> { %>
              <button class="list-group-item list-group-item-action"  data-iDCategoria="<%-element.IdCategoria%>"> <%- element.Nombre %> </button >
              <% }) %>
              <button class="list-group-item active list-group-item-action"  data-iDCategoria="null"> Mostrar todas </button>
          </ul>
        </div>
      </div>
    </div>
    <div class="col col-md-9">
      <div id="search-results" class="container-fluid d-flex  flex-wrap p-1 gap-2"></div>
    </div>
  </div>
</div>

<template id="search-result-template">
  <div class="card" style="width: 18rem;">
    <img style="object-fit: cover !important; height: 200px !important;" class="search-result__imagen card-img-top"
      alt="">
    <div class="card-body">
      <h5 class="search-result__title card-title text-success fs-5"></h5>
      <hr>
      <p class="search-result__precio card-text text-danger fs-5"></p>
      <button type="submit" data-Id="" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight"
        aria-controls="offcanvasRight"
        class="search-result__boton btn btn-outline-success d-block w-100">Comprar</button>
    </div>
  </div>
</template>





<div class="offcanvas offcanvas-end " style="width: 500px !important;" tabindex="-1" id="offcanvasRight"
  aria-labelledby="offcanvasRightLabel">
  <div class="offcanvas-header">
    <h5 id="offcanvasRightLabel">Carrito de compras</h5>
    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div id="ContainerCarrito" style="overflow-y: scroll;" class="offcanvas-body "></div>
  <div id="FooterCarrito"></div>
</div>


<template id="templateCarritoFooter">
  <div class="card">
    <div class="card-body d-flex justify-content-between align-items-center">
      <p class="lead mb-0">Total: <span class="CardPrecio"></span> </p>
      <button type="submit"  class="FinalizarCompra btn btn-outline-success"> Finalizar Compra </button>
    </div>
  </div>
</template>




<template id="templateCarrito">
  <div class="card  mx-auto mb-2" style="width: 60% !important;">
    <div class="card-body">
      <div class="">
        <img src="" style="object-fit: cover !important; height: 150px !important;" class="imagen card-fluid w-100 mb-1"
          alt="">
        <h5 class="card-title text-success fs-5 text-center">Manzana</h5>
        <p class="card-text text-danger fs-5 text-center">Precio: $10</p>
        <div class="row text-center">
          <div class="col">
            <button type="button" class="BtnAumentar btn btn-sm btn-outline-success">+</button>
          </div>
          <div class="col">
            <p class="card-text">Cantidad</p>
            <span class="Cantidad card-text text-danger fs-5">10</span>
          </div>
          <div class="col">
            <button type="button" class="BtnDisminuir btn btn-sm btn-outline-danger">-</button>
          </div>
        </div>
        <p class="text-center card-text text-success fs-5 border border-danger py-2"> Precio Final <span
            class="CardPrecio"></span> </p>
      </div>
    </div>
  </div>
</template>









<script>
  const container = document.getElementById('search-results');
  const template = document.getElementById('search-result-template');
  const searchInput = document.getElementById('search-input');
  const fragment = document.createDocumentFragment();
  const items = <%- JSON.stringify(MostrarProducto) %>;
  const filtrarCategoria = document.querySelectorAll('.list-group-item')
  const ContenedorCarrito = document.getElementById('ContainerCarrito')
  const TemplateCarrito = document.getElementById('templateCarrito')
  const FooterCarrito = document.getElementById('FooterCarrito')
  const TemplateCarritoFooter = document.getElementById('templateCarritoFooter')


  let Carrito = [];

  window.addEventListener('DOMContentLoaded', function () {
    displaySearchResults(items);

    document.addEventListener('click', (e) => {

      if (e.target.matches('.search-result__boton')) {
        agregarCarrito(e.target.parentElement.parentElement);
      }

      if (e.target.matches('.BtnAumentar')) {
        CarritoAumentar(e.target);
      }

      if (e.target.matches('.BtnDisminuir')) {
        CarritoDisminuir(e.target);
      }

      if(e.target.matches('.FinalizarCompra')){
        EnviarProductos(e.target);
      }

    });

  });


  const agregarCarrito = (element) => {
    let ObjectoCarrito = {
      Id: parseInt(element.querySelector('.search-result__boton').getAttribute('data-Id')),
      Cantidad: 1,
      Nombre: element.querySelector('.search-result__title').textContent,
      Precio: parseFloat(element.querySelector('.search-result__precio').textContent.replace('$', '')),
      Imagen: element.querySelector('.search-result__imagen').src
    }
    let DataFind = Carrito.findIndex(obj => obj.Id === ObjectoCarrito.Id);
    DataFind === -1
      ? Carrito.push(ObjectoCarrito)
      : Carrito[DataFind].Cantidad++;  
    pintarCarrito();
  }


  const pintarCarrito = () => {
    ContenedorCarrito.textContent = '';

    if (Carrito.length === 0) {
      ContenedorCarrito.textContent = 'No hay productos en el carrito';
      FooterCarrito.textContent = '';
      return;
    }

    Carrito.forEach(element => {
      const templateContent = TemplateCarrito.content.cloneNode(true);
      const cardTitle = templateContent.querySelector('.card-title');
      const cardText = templateContent.querySelector('.card-text');
      const cantidadElement = templateContent.querySelector('.Cantidad');
      const imagenElement = templateContent.querySelector('.imagen');
      const btnAumentar = templateContent.querySelector('.BtnAumentar');
      const btnDisminuir = templateContent.querySelector('.BtnDisminuir');
      const cardPrecio = templateContent.querySelector('.CardPrecio');

      cardTitle.textContent = element.Nombre;
      cardText.textContent = `$${element.Precio}`;
      cantidadElement.textContent = element.Cantidad;
      imagenElement.src = element.Imagen;
      btnAumentar.setAttribute('data-Aumentar', element.Id);
      btnDisminuir.setAttribute('data-Disminuir', element.Id);
      cardPrecio.textContent = `$${parseFloat(element.Precio) * parseFloat(element.Cantidad)}`;

      fragment.appendChild(templateContent);
    })

    ContenedorCarrito.appendChild(fragment);


    

    pintarFooterCarrito();

  }

  const CarritoAumentar = (element) => {
    let DataFind = Carrito.findIndex(obj => obj.Id === parseInt(element.getAttribute('data-Aumentar')));
    if (DataFind !== -1) {
      Carrito[DataFind].Cantidad++;
      pintarCarrito();
    }
  }

  const CarritoDisminuir = (element) => {
    let DataFind = Carrito.findIndex(obj => obj.Id === parseInt(element.getAttribute('data-Disminuir')));
    if (DataFind !== -1) {
      Carrito[DataFind].Cantidad--;
      if (Carrito[DataFind].Cantidad === 0) {
        Carrito.splice(DataFind, 1);
      }
      pintarCarrito();
    }
  }


  const pintarFooterCarrito = () => {
    FooterCarrito.textContent = '';
    const templateContent = TemplateCarritoFooter.content.cloneNode(true)
    let Total = Carrito.reduce((acc, item) => acc + item.Precio * item.Cantidad, 0)
    templateContent.querySelector('.CardPrecio').textContent = `$${Total}`;
    FooterCarrito.appendChild(templateContent);
  }


  const EnviarProductos = async (element)=>{    

    const data = await fetch('/tienda/createOrders', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(Carrito),
    });
    
    const response = await data.json();
    const paymentURL = response.paymentURL;  
    window.location.href = paymentURL;
  }


  searchInput.addEventListener('input', (e) => {
    if (searchInput.value !== '') {
      const productofiltrado = items.filter((item) => {
        return item.Nombre.toLowerCase().includes(searchInput.value.toLowerCase());
      });
      displaySearchResults(productofiltrado);
    } else {
      displaySearchResults(items);
    }
  });

  filtrarCategoria.forEach(item => {
    item.addEventListener("click", (e) => {
      const categoriaId = parseInt(e.target.getAttribute('data-iDCategoria'));
      const productofiltrado = items.filter((item) => {
        return item.categoriaId === categoriaId;
      });

      if (productofiltrado.length === 0) {
        displaySearchResults(items);
      } else {
        displaySearchResults(productofiltrado);
      }

    });
  });


  $('.CardCategoria').on('click', function(e) {     
     const categoriaId  = parseInt($(this).attr('data-Id'))
     const productofiltrado = items.filter((item) => {
      return item.categoriaId === categoriaId;
    });
    if(productofiltrado.length > 0){
      displaySearchResults(productofiltrado);
    }else{
      displaySearchResults(items);
    }
  }) 

  function displaySearchResults(results) {
    container.textContent = '';
    if (results.length === 0) {
      const noResultsElement = document.createElement('p');
      noResultsElement.textContent = 'No se encontraron resultados.';
      container.appendChild(noResultsElement);
    } else {
      results.forEach((result) => {
        const templateContent = template.content.cloneNode(true);
        const imagenElement = templateContent.querySelector('.search-result__imagen');
        const titleElement = templateContent.querySelector('.search-result__title');
        const precioElement = templateContent.querySelector('.search-result__precio');
        const botonElement = templateContent.querySelector('.search-result__boton');

        imagenElement.setAttribute('src', `img/${result.imagen}`);
        titleElement.textContent = result.Nombre;
        precioElement.textContent = `$${result.precio}`;
        botonElement.setAttribute('data-Id', result.IdProducto);
        if (result.stock > 0) {
          botonElement.disabled = false;
        } else {
          botonElement.disabled = true;
        }
        fragment.appendChild(templateContent);
      });
      container.appendChild(fragment);
    }
  }
</script>